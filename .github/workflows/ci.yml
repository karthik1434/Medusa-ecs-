name: build Medusa Backend

on:
  push:
    branches:
      - ci

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ECR_REPOSITORY_NAME: medusa


    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Create ECR repository if it doesn't exist 
        run: |
          aws ecr describe-repositories --repository-names $ECR_REPOSITORY_NAME || \
          aws ecr create-repository --repository-name $ECR_REPOSITORY_NAME
          REPO_URI=$(aws ecr describe-repositories \
            --repository-names $ECR_REPOSITORY_NAME \
            --query 'repositories[0].repositoryUri' \
            --output text)
          echo "REPO_URI=$REPO_URI" >> $GITHUB_ENV
          echo "ECR Repo URI is: ${{ env.REPO_URI }}"
       
      - name: Print ECR Repo URI
        run: |
          echo "ECR Repo URI is: ${{ env.REPO_URI }}"    

      - name: Login to AWS ECR
        run: |
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin ${{ env.REPO_URI }}


      - name: Build & Push Docker Image
        run: |
          cd docker
          docker build -t medusa -f Dockerfile ..
          docker tag medusa:latest ${{ env.REPO_URI }}:latest
          docker push ${{ env.REPO_URI }}:latest
